#!/bin/bash
set -e

# only allow a npm release if there is a patch (oterhwise we have to fix it manually)
# if you create a release branch by a patch, check first, if there is no higher patch available


# --base-tag=v56.1.0
# --npm-auth-token=82e3c2b4-6fec-4bc4-8f0f-4f3d34d15e0b

# parse command line argumens in bash
# https://stackoverflow.com/questions/192249/how-do-i-parse-command-line-arguments-in-bash
while [[ $# -gt 0 ]]
do
key="$1"
echo $key

case $key in
    --base-tag)
    export BASE_TAG="$2"
    shift # past argument
    ;;
    --npm-auth-token)
    export NPM_AUTH_TOKEN="$2"
    shift # past argument
    ;;
    *)
          # unknown option
    ;;
esac
shift # past argument or value
done


echo "hello"
echo $BASE_TAG
echo "hello2"
export branch="maintenance-$(echo $BASE_TAG | cut -d '.' -f1 -f2)"
export tag=$branch
echo NPM_AUTH_TOKEN     = "${NPM_AUTH_TOKEN}"

echo "base: $base"
echo "branch: $branch"
echo "tag: $tag"


exit 1

# Define your new 'maintenance' branch


# create branch maintenance-v27.6.0
git checkout $base
git checkout -b $branch


# semantic-release only runs on master by default.
# Set release.branch to maintenance-v27.6.0 in package.json to enable semantic-release on your non-master branch.
# semantic-release publishes the new version as `latest` by default.
# As you're releasing an old version, set publishConfig.tag to prevent a release of the `latest` dist-tag
# Both steps are required to not mess up other customers installations
cat package.json | jq ".release.branch=\"$branch\" | .publishConfig.tag=\"$tag\"" | cat > package.json.tmp && mv package.json.tmp package.json


# Create a dist tag that's used for semantic-release
export name=$(node -e 'console.log(require("./package.json").name)')



# Pass the auth token you generated above in the following command.
# Make sure you have a write access token, or you'll get a 404
# e.g. npm dist-tag add @livingdocs/editor@v7.3.4 maintenance-v7.3.4
npm dist-tag add $name@$base $tag --//registry.npmjs.org/:_authToken=$NPM_AUTH_TOKEN


git add package.json
git commit -m "chore: Setup up maintenance branch $branch"
git push origin $branch
